openapi: 3.0.0
info:
  description: X-Road Central Server Admin API. Note that the error metadata responses described in some endpoints are subjects to change and may be updated in upcoming versions.
  version: "1.0.0"
  title: X-Road Central Server Admin API
  contact:
    name: Nordic Institute for Interoperability Solutions (NIIS)
    url: https://github.com/nordic-institute/X-Road-development/#enhancement-requests-and-error-reports
    email: info@niis.org
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: /api/v1
    description: basepath for API v1
paths:
  /system/version:
    get:
      tags:
        - system
      summary: get information for the system version
      operationId: systemVersion
      responses:
        '200':
          description: system version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/status:
    get:
      tags:
        - system
      summary: get the system status
      operationId: systemStatus
      responses:
        '200':
          description: system status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /system/status/server-address:
    put:
      tags:
        - system
      summary: update the server address
      operationId: updateCentralServerAddress
      requestBody:
        description: New central server address
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerAddressUpdateBody'
      responses:
        '200':
          description: System status with updated Central Server address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatus'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /initialization:
    post:
      tags:
        - initialization
      summary: Initialize a new central server with the provided initial configuration
      operationId: initCentralServer
      description:
        <h3>Administrator initializes a new Central Server with the provided initial configuration.</h3>
        <p>
        This endpoint can also return metadata in the error response. The metadata array can contain error messages about why the init did not succeed.
        If the pin code is too weak, the error code <code>weak_pin</code> is used and the entries in the metadata array are always ordered in following way
        <ul>
        <li>metadata has a list of strings ["pin_min_length", x, "pin_min_char_classes_count", y] where</li>
        <li>x = the minimum length of the pin code</li>
        <li>y = the minimum amount of character classes (e.g. uppercase, number, special characters) to be used in the pin code</li>
        </ul>
        Other possible error code are
        <ul>
        <li><code>invalid_init_params</code> for "business" logic problems which can have any one or more of the following strings in the metadata field.
        There "_exists" -entries are returned if parameter has been given already in partially succeeded initialization.
        The "_not_provided"-entries are returned if these parameters is needed still for the initialization,  but it is not given in the request.

        </li>


        <ul>
        <li>pin_code_exists</li>
        <li>pin_code_not_provided</li>
        <li>server_address_exists</li>
        <li>server_address_not_provided</li>
        <li>instance_identifier_exists</li>
        <li>instance_identifier_not_provided</li>
        </ul>
        <li><code>validation_failure</code> for parameter format errors
        </ul>
        </p>
        </p>
        <strong>See the '400' response examples</strong>
      requestBody:
        description: initial central server configuration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitialServerConf'
      responses:
        '201':
          description: central server initialized
        '400':
          description: request was invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              examples:
                error_response:
                  $ref: '#/components/examples/ErrorExample'
                error_invalid_init_params:
                  $ref: '#/components/examples/ErrorInvalidInitParamsMetadataExample'
                error_weak_pin:
                  $ref: '#/components/examples/ErrorWeakPinMetadataExample'
                warnings_response:
                  $ref: '#/components/examples/InitializationWarningExample'
                validation_errors_response:
                  $ref: '#/components/examples/ValidationErrorsExample'
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server error
  /initialization/status:
    get:
      tags:
        - initialization
      summary: Check the initialization status of the Central Server
      operationId: getInitializationStatus
      description: <h3>Administrator checks the initialization status of the Central Server.</h3>
      responses:
        '200':
          description: initialization status of the Central Server
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitializationStatus'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '409':
          description: an existing item already exists
        '500':
          description: internal server
  /member-classes:
    get:
      tags:
        - member-classes
      summary: List member classes
      operationId: getMemberClasses
      description: <h3>CS Administrator lists member classes.</h3>
      responses:
        '200':
          description: array of member classes
          content:
            application/json:
              schema:
                type: array
                description: array of member classes
                uniqueItems: true
                items:
                  $ref: '#/components/schemas/MemberClass'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    post:
      tags:
        - member-classes
      summary: Add a member class
      operationId: addMemberClass
      description: <h3>CS Administrator adds a new member class.</h3>
      requestBody:
        description: new additional member class to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberClass'
      responses:
        '200':
          description: the added member class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberClass'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /member-classes/{code}:
    put:
      tags:
        - member-classes
      summary: Update member class description
      operationId: updateMemberClassDescription
      description: CS Administrator updates a member class description.
      parameters:
        - in: path
          name: code
          description: code of the member class
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      requestBody:
        description: the new description of the member class
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberClass'
      responses:
        '200':
          description: the new status of the updated member class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberClass'
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
    delete:
      tags:
        - member-classes
      summary: Delete a member class
      operationId: deleteMemberClass
      description: CS Administrator deletes a member class.
      parameters:
        - in: path
          name: code
          description: code of the member class
          required: true
          schema:
            type: string
            format: text
            minLength: 1
            maxLength: 255
      responses:
        '204':
          description: Deletion succeeded
        '400':
          description: request was invalid
        '401':
          description: authentication credentials are missing
        '403':
          description: request has been refused
        '404':
          description: resource requested does not exists
        '406':
          description: request specified an invalid format
        '500':
          description: internal server error
  /clients:
    get:
      description: <h3>CS administrator searches for X-Road clients.</h3>
      operationId: findClients
      parameters:
        - description: >
            An optional generic filtering query parameter selects only items that contain parameter
            value in properties (name, instance, member_class, member_code, subsystem_code, security_server) . Needs to be properly encoded for the
            special characters, too. Empty value means the parameter is ignored.
          in: query
          name: q
          required: false
          schema:
            example: foobar
            format: text
            minLength: 3
            maxLength: 25
            type: string
        - description: optional paging and sorting parameters
          in: query
          name: paging_sorting
          required: false
          schema:
            $ref: '#/components/schemas/PagingSortingParameters'
        - description: an optional search string (member name). Client field needs to contain parameter value (case insensitive). Empty value means the parameter is ignored.
          in: query
          name: name
          required: false
          schema:
            format: text
            maxLength: 255
            minLength: 0
            type: string
        - description: an optional search string (instance). Client field needs to contain parameter value (case insensitive). Empty value means the parameter is ignored.
          in: query
          name: instance
          required: false
          schema:
            format: text
            maxLength: 255
            minLength: 0
            type: string
        - description: an optional search string (member_class). Client field needs to contain parameter value (case insensitive). Empty value means the parameter is ignored.
          in: query
          name: member_class
          required: false
          schema:
            format: text
            maxLength: 255
            minLength: 0
            type: string
        - description: an optional search string (member_code). Client field needs to contain parameter value (case insensitive). Empty value means the parameter is ignored.
          in: query
          name: member_code
          required: false
          schema:
            format: text
            maxLength: 255
            minLength: 0
            type: string
        - description: an optional search string (subsystem_code). Client field needs to contain parameter value (case insensitive). Empty value means the parameter is ignored.
          in: query
          name: subsystem_code
          required: false
          schema:
            format: text
            maxLength: 255
            minLength: 0
            type: string
        - description: an optional parameter limiting search to either members or subsystems. If not used, both are searched for.
          in: query
          name: client_type
          required: false
          schema:
            $ref: '#/components/schemas/ClientType'
        - description: an optional security server id parameter - only return clients that belong to this security server. Empty value means the parameter is ignored.
          in: query
          name: security_server
          required: false
          schema:
            description: <instance_id>:<member_class>:<member_code>:<security_server_code>
            example: FI:GOV:123:sserver1
            format: text
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedClients'
          description: paged clients results
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalServerError'
      summary: find clients
      tags:
        - clients
components:
  schemas:
    InitializationStatus:
      type: object
      description: Initialization status of the Central Server
      required:
        - instance_identifier
        - central_server_address
        - software_token_init_status
      properties:
        instance_identifier:
          $ref: '#/components/schemas/InstanceIdentifier'
        central_server_address:
          $ref: '#/components/schemas/CentralServerAddress'
        software_token_init_status:
          $ref: '#/components/schemas/TokenInitStatus'
    InitialServerConf:
      type: object
      description: central server initial configuration
      properties:
        instance_identifier:
          $ref: '#/components/schemas/InstanceIdentifier'
        central_server_address:
          $ref: '#/components/schemas/CentralServerAddress'
        software_token_pin:
          type: string
          format: text
          description: pin code for the initial software token
          example: sup3rs3cr3t_p!n
          minLength: 1
          maxLength: 255
    TokenInitStatus:
      type: string
      format: enum
      description: whether a token has been initialized or not – if the software token init status
        cannot be resolved (e.g. signer module is offline), the value is UNKNOWN
      example: INITIALIZED
      enum:
        - INITIALIZED
        - NOT_INITIALIZED
        - UNKNOWN
    InstanceIdentifier:
      type: string
      format: text
      description: Valid instance identifier, shall not contain colon, semicolon, forwardslash, backslash, percent or control characters.
      example: FI-TEST
      minLength: 1
      maxLength: 255
    CentralServerAddress:
      type: string
      format: text
      description: Central server’s public DNS name or external IP address
    HighAvailabilityStatus:
      type: object
      description: Central server's high availability status
      properties:
        is_ha_configured:
          type: boolean
          description: indicates if the central server is in high availability mode
          default: false
        node_name:
          type: string
          format: text
          description: central server's node name
          example: node_0
          minLength: 1
          maxLength: 255
    PagedClients:
      description: array of Clients with paging metadata
      properties:
        clients:
          description: clients
          items:
            $ref: '#/components/schemas/Client'
          type: array
        paging_metadata:
          $ref: '#/components/schemas/PagingMetadata'
      required:
        - items
        - paging_metadata
      type: object
    PagingMetadata:
      description: metadata about paged results
      properties:
        total_items:
          description: Total number of items in the query results
          type: integer
          format: int32
      required:
        - total_items
      type: object
    PagingSortingParameters:
      description: parameters for sorting and paging search results
      properties:
        sort:
          description: Indicates item property that is to be used as sorting key.
          example: title
          minLength: 2
          pattern: '[a-z_]+'
          maxLength: 25
          type: string
        sort_desc:
          description: >
            Used sorting direction. Value 'true'  indicates descending and 'false' or omitted
            parameter indicates ascending direction.
          default: false
          type: boolean
        limit:
          description: >
            Indicates the maximum number of items for the returned page.   If parameter is
            omitted, then the default amount of 25   is returned.
          default: 25
          type: integer
          format: int32
        offset:
          description: >
            Offset in pages from the beginning of the query result after filtering and sorting
            parameters are taken into account.  If the parameter omitted or the value 0 (zero)
            is given, the first page is returned.
          default: 0
          type: integer
          format: int32
      type: object
    SystemStatus:
      type: object
      description: Central server's status
      properties:
        initialization_status:
          $ref: '#/components/schemas/InitializationStatus'
        high_availability_status:
          $ref: '#/components/schemas/HighAvailabilityStatus'
    ServerAddressUpdateBody:
      type: object
      description: New Central server address
      required:
        - central_server_address
      properties:
        central_server_address:
          $ref: '#/components/schemas/CentralServerAddress'
    User:
      $ref: '../../../../../common-rest-api/src/main/resources/common-openapi-definition.yaml#/components/schemas/User'
    Version:
      type: object
      description: version information
      required:
        - info
      properties:
        info:
          type: string
          format: text
          description: information about the security server
          example: Security Server version 6.21.0-SNAPSHOT-20190411git32add470
          minLength: 1
          maxLength: 255
    ErrorInfo:
      $ref: '../../../../../common-rest-api/src/main/resources/common-openapi-definition.yaml#/components/schemas/ErrorInfo'
    CodeWithDetails:
      $ref: '../../../../../common-rest-api/src/main/resources/common-openapi-definition.yaml#/components/schemas/CodeWithDetails'
    MemberId:
      description: XroadId of a member
      properties:
        instance_id:
          description: Xroad instance id. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
          example: FI
          format: text
          maxLength: 255
          minLength: 1
          type: string
          readOnly: true
        member_class:
          description: Member class. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
          example: GOV
          format: text
          maxLength: 255
          minLength: 1
          type: string
        member_code:
          description: Member code. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
          example: 123
          format: text
          maxLength: 255
          minLength: 1
          type: string
      required:
        - instance_id
        - member_class
        - member_code
      type: object
    ClientId:
      allOf:
        - $ref: '#/components/schemas/MemberId'
      description: XroadId of a member or a subsystem
      properties:
        subsystem_code:
          description: Subsystem code. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
          example: ABC
          format: text
          maxLength: 255
          minLength: 1
          type: string
      required:
        - instance_id
        - member_class
        - member_code
      type: object
    Client:
      allOf:
        - $ref: '#/components/schemas/MemberName'
        - $ref: '#/components/schemas/ModificationTimestamps'
      description: x-road member
      required:
        - id
        - member_name
        - xroad_id
        - client_type
      properties:
        id:
          description: the encoded string representation of the x-road member or subsystem id
          example: FI:GOV:123:ABC
          format: text
          maxLength: 1023
          minLength: 1
          type: string
          readOnly: true
        xroad_id:
          $ref: '#/components/schemas/ClientId'
        client_type:
          $ref: '#/components/schemas/ClientType'
      type: object
    MemberClass:
      allOf:
        - $ref: '#/components/schemas/MemberClassDescription'
        - $ref: '#/components/schemas/ModificationTimestamps'
      description: Central server's member classes
      properties:
        code:
          description: member class code
          example: ORG
          format: text
          maxLength: 255
          minLength: 1
          type: string
      required:
        - code
      type: object
    MemberClassDescription:
      description: Central server's member class description
      properties:
        description:
          description: member class description
          example: Non-profit organisations
          format: text
          maxLength: 255
          minLength: 1
          type: string
      required:
        - description
      type: object
    MemberName:
      description: x-road member name
      properties:
        member_name:
          description: Member name. Cannot contain colons, semicolons, slashes, backslashes, percent signs or control characters
          example: Member123
          format: text
          maxLength: 255
          minLength: 1
          type: string
      required:
        - member_name
      type: object
    ClientType:
      description: client type
      enum:
        - MEMBER
        - SUBSYSTEM
      example: SUBSYSTEM
      format: text
      type: string
    ModificationTimestamps:
      description: created_at and updated_at timestamps
      properties:
        created_at:
          description: object creation time
          example: '2022-01-20T00:00:00.001Z'
          format: date-time
          readOnly: true
          type: string
        updated_at:
          description: last time updated
          example: '2022-01-22T07:30:00.001Z'
          format: date-time
          readOnly: true
          type: string
      type: object
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: X-Road-ApiKey token=<api key>
      # https://github.com/nordic-institute/X-Road-REST-UI/blob/XRDDEV-237/doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md#1911-creating-new-api-keys
  examples:
    ErrorExample:
      $ref: '../../../../../common-rest-api/src/main/resources/common-openapi-definition.yaml#/components/examples/ErrorExample'
    ErrorWithMetadataExample:
      $ref: '../../../../../common-rest-api/src/main/resources/common-openapi-definition.yaml#/components/examples/ErrorWithMetadataExample'
    ErrorInvalidInitParamsMetadataExample:
      summary: Initialization error with metadata
      value:
        status: 400
        error:
          code: invalid_init_params
          metadata:
            - "server_address_not_provided"
            - "instance_id_not_provided"
            - "pin_code_exists"
    ErrorWeakPinMetadataExample:
      summary: Initialization or pin change error with metadata when the provided pin is too weak
      value:
        status: 400
        error:
          code: weak_pin
          metadata:
            - "pin_min_length"
            - "8"
            - "pin_min_char_classes_count"
            - "3"
    InitializationWarningExample:
      summary: All initialization warnings example.
      value:
        status: 400
        error:
          code: warnings_detected
        warnings:
          - code: init_software_token_initialized
    ValidationErrorsExample:
      summary: Validation errors response body example
      value:
        status: 400
        error:
          code: validation_failure
          validation_errors:
            "initialServerConf.instanceIdentifier":
              - IdentifierChars
  responses:
    BadRequest:
      description: request was invalid
    Conflict:
      description: an existing item already exists
    Forbidden:
      description: request has been refused
    InternalServerError:
      description: internal server error
    NoContent:
      description: request was successful
    NotFound:
      description: resource requested does not exists
    Unauthorized:
      description: authentication credentials are missing
security:
  - ApiKeyAuth: [ ]
